@startuml TextAdventure Class Diagram
package es.hugoalvarezajenjo.textadventure {
    package model {
        class Player {
            - health: int
            - weapon: Weapon
            + new(health: int, weapon: Weapon): Player
            + getHp(): int
            + setHp(hp: int)
            + getWeapon(): Weapon
            + setWeapon(weapon: Weapon)
        }

        class Weapon{
            - name: String
            - damage: int
            + new(name: String, damage: int): Weapon
            + getName(): String
            + getDamage(): int
        }

        package histories {
            abstract Story {
                - title: String
                - choice1: String
                - choice2: String
                - choice3: String
                - choice4: String
                + new(title: String, choice1: String, choice2: String, choice3: String, choice4: String): Story
                + makeChoice(choice: String): Story
                + getHpVariation(): int
                + getWeaponVariation(): Weapon
                # {abstract} choice1(): Story
                # {abstract} choice2(): Story
                # {abstract} choice3(): Story
                # {abstract} choice4(): Story
            }

            class TownStory {
                + new(): TownStory
                # choice1(): Story
                # choice2(): Story
                # choice3(): Story
                # choice4(): Story
            }

            class AttackGuardStory{
                + new(): AttackGuardStory
                + getHpVariation(): int
                # choice1(): Story
                # choice2(): Story
                # choice3(): Story
                # choice4(): Story
            }

            class CrossTheRoadStory{
                + new(): CrossTheRoadStory
                # choice1(): Story
                # choice2(): Story
                # choice3(): Story
                # choice4(): Story
            }

            class RiverStory{
                + new(): RiverStory
                + getHpVariation(): int
                # choice1(): Story
                # choice2(): Story
                # choice3(): Story
                # choice4(): Story
            }

            class ForestHistory{
                + new(): ForestHistory
                + getWeaponVariation(): Weapon
                # choice1(): Story
                # choice2(): Story
                # choice3(): Story
                # choice4(): Story
            }

            class MonsterStory {
                - monster: Monster
                + new(): MonsterHistory
                + getHpVariation(): int
                # choice1(): Story
                # choice2(): Story
                # choice3(): Story
                # choice4(): Story
            }

            class TalkGuardStory{
                + new(): TalkGuardStory
                # choice1(): Story
                # choice2(): Story
                # choice3(): Story
                # choice4(): Story
            }
        }

        class Monster {
            - name: String
            - hp: int
            - attack: int
            + new(name: String, hp: int, attack: int)
            + getName(): String
            + getHp(): int
            + setHp(hp: int)
            + getAttack(): int
        }
    }

    package logic {
        class StoryManager <<controller>> {
            - player: Player
            - story: Story
            + new(): StoryManager
            + getStoryTitle(): String
            + getStoryChoices(): String[]
            + makeChoice(choice: String): boolean
        }
    }

    package ui {
        class MainWindow <<UI>> {
            + new(): MainWindow
        }
        class MainWindowController <<UIController>> {
            - mainWindow: MainWindow
            + new(mainWindow: MainWindow): MainWindowController
            + showStartScreen()
            + showChoiceScreen()
            + showEndScreen()
        }
        abstract WindowScreen <<UI>> {
            + new(): WindowScreen
        }

        package theme {
            class Fonts {
                + {static} TITLE_FONT: Font
                + {static} NORMAL_FONT: Font
            }
            class Dimensions {
                + {static} DEFAULT_WINDOW_SIZE: Dimension
            }
        }

        package startscreen {
            class StartScreen <<UI>> {
                +new(onStartButtonClick: ActionListener): StartScreen
            }

            class StartButtonListener <<ViewListener>> {
                - mainWindowController: MainWindowController
                + new(mainWindowController: MainWindowController): StartButtonListener
                + actionPerformed(event: ActionEvent)
            }
        }

        package choicescreen {
            class ChoiceScreen <<UI>> {
                + new(choiceButtonListener: ChoiceButtonListener): ChoiceScreen
                + setHp(hp: int)
                + setWeaponName(weapon: String)
                + setStoryTitle(title: String)
                + setStoryChoices(choice: String[])
            }

            class ChoiceScreenController <<UIController>> {
                - choiceScreen: ChoiceScreen
                - storyManager: StoryManager
                + new(choiceScreen: ChoiceScreen, storyManager: StoryManager): ChoiceScreenController
                - updateHp(hp: int)
                - updateWeaponName(weaponName: String)
                - updateStoryTitle(title: String)
                - updateStoryChoices(choice: String[])
                - update()
                + notifyChoice(choice: String)
            }

            class ChoiceButtonListener <<ViewListener>> {
                - controller: ChoiceScreenController
                + setController(controller: ChoiceScreenController)
                + actionPerformed(event: ActionEvent)
            }
        }

        package endscreen {
            class EndScreen {
                + new(): EndScreen
                - youDied(): JLabel
            }
        }

    }

    class Main <<system>>{
        + {static} main(args: String[])
    }
}

WindowScreen <|-- StartScreen
WindowScreen <|-- ChoiceScreen
WindowScreen <|-- EndScreen

Story <|-- TownStory
Story <|-- CrossTheRoadStory
Story <|-- TalkGuardStory
Story <|-- AttackGuardStory
Story <|-- RiverStory
Story <|-- ForestHistory
Story <|-- MonsterStory

Main --> MainWindowController

MainWindowController *-->"1" MainWindow: Controls
MainWindowController <-- ChoiceScreenController: Navigate
MainWindowController <-- StartButtonListener: Navigate

MainWindow *-->"1" WindowScreen: Shows

StartButtonListener <-* StartScreen

ChoiceScreen "1"<-* ChoiceScreenController: Controls
ChoiceScreen *--> ChoiceButtonListener
ChoiceScreenController <-- ChoiceButtonListener: Executes
ChoiceScreenController *--->"1" StoryManager: Uses

Player *-->"1" Weapon: Has

StoryManager *-->"1" Story
StoryManager *-->"1" Player

Story --> Story: Next Story
Story *-> Player

MonsterStory *-->"1" Monster

@enduml
