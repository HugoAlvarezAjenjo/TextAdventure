@startuml TextAdventure Class Diagram
package es.hugoalvarezajenjo.textadventure {
    package model {
        class Player {
            - health: int
            - weapon: Weapon
            + new(health: int, weapon: Weapon): Player
        }

        abstract Weapon{
            - name: String
            - damage: int
            + new(name: String, damage: int): Weapon
        }

        class Knife {
            + new(): Knife
        }
         class LongSword {
            + new(): LongSword
        }
    }

    package logic {
        class PlayerManager <<controller>>{
            - player: Player
            + new(): PlayerManager
            + getPlayerHealth(): int
            + getPlayerWeaponName(): String
        }
    }

    package ui {
        class MainWindow <<UI>>
        class MainWindowController <<UIController>>
        abstract WindowScreen <<UI>>

        package startscreen {
            class StartScreen <<UI>>
            class StartButtonListener <<ViewListener>>
        }

        package choicescreen {
            class ChoiceScreen <<UI>> {
                + setHp(hp: int)
                + setWeaponName(weaponName: WeaponName)
            }
            class ChoiceScreenController <<UIController>> {
                - choicescreen: ChoiceScreen
                + updateHp(hp: int)
                + updateWeaponName(weaponName: WeaponName)
            }
            class ChoiceButtonListener <<ViewListener>>
        }

    }

    class Main <<system>>{
        + {static} main(args: String[])
    }
}

WindowScreen <|-- StartScreen
WindowScreen <|-- ChoiceScreen

Weapon <|-- Knife
Weapon <|-- LongSword

Main --> MainWindowController

MainWindowController -> MainWindow

MainWindow *--> WindowScreen

StartButtonListener <- StartScreen
MainWindowController <-- StartButtonListener

ChoiceScreen <- ChoiceScreenController
ChoiceScreenController --> PlayerManager

ChoiceScreen --> ChoiceButtonListener

PlayerManager --> Player

Player o--> Weapon

@enduml
